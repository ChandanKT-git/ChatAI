{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "abd77e08-6907-464b-a13d-a5d8494892e9",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -960,
        336
      ],
      "webhookId": "ai-chatbot-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.headers.authorization }}",
              "operation": "exists"
            }
          ]
        }
      },
      "id": "f5d1415e-2d85-42e5-8120-7411ee77098c",
      "name": "Validate Auth",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -736,
        336
      ]
    },
    {
      "parameters": {
        "url": "https://ggpdfdwwtvdcudrqfqcw.graphql.ap-south-1.nhost.run/v1/graphql",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $json.headers.authorization }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=query GetChatUser($chatId: uuid!) { chats_by_pk(id: $chatId) { user_id } }"
            },
            {
              "name": "variables",
              "value": "={\"chatId\": \"{{ $json.body.chat_id }}\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "50ad4a33-e925-43da-b2fb-9d5f1a0f62c3",
      "name": "Get Chat User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -512,
        240
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "A4ic2GKmIbLuTMSJ",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data.chats_by_pk.user_id }}",
              "value2": "={{ $json.headers['x-hasura-user-id'] }}"
            }
          ]
        }
      },
      "id": "3863fe60-b6a9-4d58-8806-369bc90e2c8b",
      "name": "Validate Ownership",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -288,
        240
      ]
    },
    {
      "parameters": {
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.OPENROUTER_API_KEY }}"
            },
            {
              "name": "HTTP-Referer",
              "value": "https://ai-chatbot.netlify.app"
            },
            {
              "name": "X-Title",
              "value": "AI Chatbot"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "deepseek/deepseek-chat"
            },
            {
              "name": "messages",
              "value": "=[{\"role\": \"user\", \"content\": \"{{ $json.body.message }}\"}]"
            },
            {
              "name": "max_tokens",
              "value": "1000"
            },
            {
              "name": "temperature",
              "value": "0.7"
            }
          ]
        },
        "options": {}
      },
      "id": "b9fec768-af8b-4706-9165-a91b0fba449d",
      "name": "Call OpenRouter",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -64,
        144
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "A4ic2GKmIbLuTMSJ",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "url": "https://ggpdfdwwtvdcudrqfqcw.graphql.ap-south-1.nhost.run/v1/graphql",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-hasura-admin-secret",
              "value": "={{ $vars.HASURA_ADMIN_SECRET }}}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=mutation InsertMessage($chatId: uuid!, $content: String!, $role: String!) { insert_messages_one(object: { chat_id: $chatId, content: $content, role: $role }) { id } }"
            },
            {
              "name": "variables",
              "value": "={\"chatId\": \"{{ $json.body.chat_id }}\", \"content\": \"{{ $('Call OpenRouter').item.json.choices[0].message.content }}\", \"role\": \"assistant\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "1cbef583-3a0a-446d-bbbb-d81967d337d4",
      "name": "Save AI Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        160,
        144
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "A4ic2GKmIbLuTMSJ",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"success\": true, \"response\": \"{{ $('Call OpenRouter').item.json.choices[0].message.content }}\"}",
        "options": {}
      },
      "id": "f2db3921-8d5a-43ea-869f-017be9bdeac3",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        384,
        144
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"success\": false, \"error\": \"Unauthorized\"}",
        "options": {}
      },
      "id": "bb637653-99cb-4e6e-ae72-761009105518",
      "name": "Unauthorized Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -512,
        432
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"success\": false, \"error\": \"Chat ownership validation failed\"}",
        "options": {}
      },
      "id": "749d7a48-4593-4f6c-ac22-eb83bde8fec5",
      "name": "Ownership Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -64,
        336
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Validate Auth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Auth": {
      "main": [
        [
          {
            "node": "Get Chat User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Unauthorized Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat User": {
      "main": [
        [
          {
            "node": "Validate Ownership",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Ownership": {
      "main": [
        [
          {
            "node": "Call OpenRouter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ownership Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call OpenRouter": {
      "main": [
        [
          {
            "node": "Save AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save AI Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "28919dd9e6c9cd9ee2243b67d7c7fc78d75c95583d084a097e02efb7a111a34e"
  }
}